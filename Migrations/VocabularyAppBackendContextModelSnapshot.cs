// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocabularyAppBackend.Context;

namespace VocabularyAppBackend.Migrations
{
    [DbContext(typeof(VocabularyAppBackendContext))]
    partial class VocabularyAppBackendContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VocabularyAppBackend.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnglishTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SwedishTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("ParentCategoryCategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Mode", b =>
                {
                    b.Property<int>("ModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EnglishTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SwedishTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModeId");

                    b.ToTable("Modes");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("English")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Swedish")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WordId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Wordlist", b =>
                {
                    b.Property<int>("WordlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DefaultWordlist")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("WordlistId");

                    b.HasIndex("UserID");

                    b.ToTable("Wordlists");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.WordlistRow", b =>
                {
                    b.Property<int>("WordListRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.Property<int?>("WordlistId")
                        .HasColumnType("int");

                    b.HasKey("WordListRowId");

                    b.HasIndex("WordId");

                    b.HasIndex("WordlistId");

                    b.ToTable("WordlistRows");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Category", b =>
                {
                    b.HasOne("VocabularyAppBackend.Entities.Category", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryCategoryId");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Word", b =>
                {
                    b.HasOne("VocabularyAppBackend.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.Wordlist", b =>
                {
                    b.HasOne("VocabularyAppBackend.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VocabularyAppBackend.Entities.WordlistRow", b =>
                {
                    b.HasOne("VocabularyAppBackend.Entities.Word", "Word")
                        .WithMany()
                        .HasForeignKey("WordId");

                    b.HasOne("VocabularyAppBackend.Entities.Wordlist", "Wordlist")
                        .WithMany()
                        .HasForeignKey("WordlistId");

                    b.Navigation("Word");

                    b.Navigation("Wordlist");
                });
#pragma warning restore 612, 618
        }
    }
}
